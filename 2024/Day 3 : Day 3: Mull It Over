input = ''' '''
import re

def calculate_sum_from_mul(input_string):
    pattern = r'mul\((\d{1,3}),(\d{1,3})\)'
    matches = re.findall(pattern, input_string)
    total = sum(int(x) * int(y) for x, y in matches)
    return total

def calculate_sum_with_do_dont(input_string):
    mul_pattern = r'mul\((\d{1,3}),(\d{1,3})\)'  
    do_pattern = r'do\(\)'                       
    dont_pattern = r"don't\(\)"                 
    
    mul_enabled = True
    total = 0
    for match in re.finditer(rf"{mul_pattern}|{do_pattern}|{dont_pattern}", input_string):
        instruction = match.group()
        
        if instruction == 'do()':
            mul_enabled = True
        elif instruction == "don't()":
            mul_enabled = False
        else:
            if mul_enabled:
                x, y = map(int, re.match(mul_pattern, instruction).groups())
                total += x * y

    return total

result = calculate_sum_from_mul(input)
result2 = calculate_sum_with_do_dont(input)
print(result)
print(result2)
